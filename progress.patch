diff --git src/CarbonAllotrope.cc src/CarbonAllotrope.cc
index c305513..fd6e369 100644
--- src/CarbonAllotrope.cc
+++ src/CarbonAllotrope.cc
@@ -1270,7 +1270,6 @@ void CarbonAllotrope::set_clockwise(int clockwise)
     p_carbons[i]->reset_clockwise();
   len = p_rings.length();
   assert(len > 0);
-#if 1 // TODO 005 どっちが正しい？
   for (int i = 0; i < len; ++i)
     p_rings[i]->reset_clockwise();
   Ring* ring0 = p_rings[0];
@@ -1279,18 +1278,6 @@ void CarbonAllotrope::set_clockwise(int clockwise)
     ring0->set_clockwise(ring0->get_carbon(0), ring0->get_carbon(1));
   else
     ring0->set_clockwise(ring0->get_carbon(1), ring0->get_carbon(0));
-#else
-  for (int i = 0; i < len; ++i)
-    {
-      Ring* ringi = p_rings[i];
-      ringi->reset_clockwise();
-      assert(ringi->number_of_carbons() >= 2);
-      if (clockwise > 0)
-        ringi->set_clockwise(ringi->get_carbon(0), ringi->get_carbon(1));
-      else
-        ringi->set_clockwise(ringi->get_carbon(1), ringi->get_carbon(0));
-    }
-#endif
 }
 
 void CarbonAllotrope::reset_done()
diff --git src/Generator.cc src/Generator.cc
index cd04b59..c5d25ba 100644
--- src/Generator.cc
+++ src/Generator.cc
@@ -154,6 +154,15 @@ void Generator::print_detail() const
   printf("%s\n", buffer);
 }
 
+void Generator::print_progress(int length) const
+{
+  if (p_history_offset > length)
+    return;
+  char buffer[1024];
+  get_generator_formula(buffer, 1024);
+  printf("pg$ %s\n", buffer);
+}
+
 int Generator::glow_step()
 {
   if (p_history_offset >= p_history_length - 1)
diff --git src/Generator.h src/Generator.h
index dd58427..8f1476c 100644
--- src/Generator.h
+++ src/Generator.h
@@ -58,6 +58,7 @@ public:
   // I/O
 public:
   void print_detail() const;
+  void print_progress(int length) const;
 
   // member accessing methods
 public:
diff --git src/Ring.cc src/Ring.cc
index fdb97ee..cbba762 100644
--- src/Ring.cc
+++ src/Ring.cc
@@ -335,7 +335,7 @@ bool Ring::set_clockwise(Carbon* from, Carbon* to)
       Carbon* my_to = p_carbons[(i + 1) % len];
       if ((my_from == from) && (my_to == to))
         {
-          clockwise = 1;
+          clockwise = +1;
           break;
         }
       else if ((my_from == to) && (my_to == from))
diff --git src/Step.cc src/Step.cc
index 8255938..c1563e6 100644
--- src/Step.cc
+++ src/Step.cc
@@ -95,6 +95,9 @@ bool Step::construction_step(Fullerene*& fullerene)
   int No = p_gen->glow_step();
   int num;
   ErrorCode result;
+#if 1 /* TODO */
+  p_gen->print_progress(7);
+#endif
   p_ca->set_clockwise(+1);
   if (p_symmetric)
     result =
